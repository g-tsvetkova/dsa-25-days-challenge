DAY,TOPIC,Status,Question - Short,Question - Long
DAY1,ARRAY,FALSE,Sorted Squared Array,You are given an array of Integers in which each subsequent value is not less than the previous value. Write a function that takes this array as an input and returns a new array with the squares of each number sorted in ascending order.
DAY1,ARRAY,FALSE,Monotonic Array,"An array is monotonic if it is either monotone increasing or monotone decreasing. An array is monotone increasing if all its elements from left to right are non-decreasing. An array is monotone decreasing if all  its elements from left to right are non-increasing. Given an integer array return true if the given array is monotonic, or false otherwise. "
DAY2,ARRAY,FALSE,Rotate Array,"Given an array, rotate the array to the right by k steps, where k is non-negative."
DAY2,ARRAY,FALSE,Container with most Water,"You are given an integer array height of length n. There are n vertical lines drawn such that the two endpoints of the ith line are (i, 0) and (i, height[i]).
Find two lines that together with the x-axis form a container, such that the container contains the most water(depth is constant across containers). Return the area(that the 2 lines and the X axis make) of container which can store the max amount of water. Notice that you may not slant the container. "
DAY3,HASH TABLE,FALSE,Two Sum,You are given an array of Integers and another integer targetValue. Write a function that will take these inputs and return the indices of the 2 integers in the array that add up targetValue.
DAY3,HASH TABLE,FALSE,Isomorphic Strings,"Given two strings s and t, determine if they are isomorphic. Two strings s and t are isomorphic if the characters in s can be replaced to get t.
All occurrences of a character must be replaced with another character while preserving the order of characters. No two characters may map to the same character, but a character may map to itself. s and t consist of any valid ascii character. "
DAY4,RECURSION,FALSE,Fibonacci,"In the Fibonacci sequence, each subsequent term is obtained by adding the preceding 2 terms. This is true for all the numbers except the first 2 numbers of the Fibonacci series as they do not have 2 preceding numbers. The first 2 terms in the Fibonacci series is 0 and 1. F(n) = F(n-1)+F(n-2) for n>1. Write a function that finds F(n) given n where n is an integer greater than equal to 0. For the first term n = 0. "
DAY4,RECURSION,FALSE,Power Sum,"Let’s define a peculiar type of array in which each element is either an integer or another peculiar array. Assume that a peculiar array is never empty. Write a function that will take a peculiar array as its input and find the sum of its elements. If an array is an element in the peculiar array you have to convert it to it’s equivalent value so that you can sum it with the other elements. Equivalent value of an array is the sum of its elements raised to the number which represents how far nested it is. For e.g. [2,3[4,1,2]] = 2+3+ (4+1+2)^2 
[1,2,[7,[3,4],2]] = 1 + 2 +( 7+(3+4)^3+2)^2"
DAY5,RECURSION,FALSE,Permutations,"Given an array of distinct integers, return all the possible permutations. You can return the answer in any order."
DAy5,RECURSION,FALSE,Power Set,"Given an integer array of unique elements, return all possible subsets (the power set). The solution set must not contain duplicate subsets. Return the solution in any order. "
DAY6,STRING,FALSE,Non repeating character,You are given a string consisting of only lower case and upper-case English Alphabets and integers 0 to 9. Write a function that will take this string as Input and return the index of the first character that is non-repeating.
DAY6,STRING,FALSE,Palindrome,You are given a string. Write a function to check whether the string is a palindrome or not.
DAY7,STRING,FALSE,Longest Unique char Substring ,"Given a string s, find the length of the longest substring without repeating characters."
DAY7,STRING,FALSE,Group Anagrams,"Given an array of strings consisting of lower case English letters, group the anagrams together. You can return the answer in any order. An Anagram is a word or phrase formed by rearranging the letters of a different word or phrase, using all the original letters exactly once. "
DAY8,SEARCHING,FALSE,Binary Search,"Given an array of integers which is sorted in ascending order, and a target integer, write a function to search for whether the target integer is there in the given array. If it is there then return its index. Otherwise, return -1. You must write an algorithm with O(log n) runtime complexity.  "
DAY8,SEARCHING,FALSE,Search in Rotated Sorted array,"You are given an integer array nums sorted in ascending order (with distinct values). Prior to being passed to your function, nums is possibly rotated at an unknown pivot index k (1 <= k < nums.length) such that the resulting array is [nums[k], nums[k+1], ..., nums[n-1], nums[0], nums[1], ..., nums[k-1]] (0-indexed). 
For example, [0,1,2,4,5,6,7] might be rotated at pivot index 3 and become [4,5,6,7,0,1,2]. Given an integer target, return the index of target if it is in the array, else return -1. You must write an algorithm with O(log n) runtime complexity."
DAY9,SEARCHING,FALSE,Find First and Last Position of Element in Sorted Array,"You are given an array of integers sorted in non-decreasing order, find the starting and ending position of a given target value. If target is not found in the array, return [-1, -1]. You must write an algorithm with O(log n) runtime complexity. "
DAY9,SEARCHING,FALSE,Search in 2D Array,"Write an efficient algorithm that searches for a value target in an m x n integer matrix. This matrix has the following properties:
Integers in each row are sorted from left to right.
The first integer of each row is greater than the last integer of the previous row.
If the value is there in the matrix return true, else false."
DAY10,SORTING,FALSE,Bubble Sort,You are given an array of integers. Write a function that will take this array as input and return the sorted array using Bubble sort.
DAY10,SORTING,FALSE,Insertion Sort,You are given an array of integers. Write a function that will take this array as input and return the sorted array using Insertion sort.
DAY11,SORTING,FALSE,Selection Sort,You are given an array of integers. Write a function that will take this array as input and return the sorted array using Selection sort.
DAY11,SORTING,FALSE,Merge Sort,You are given an array of integers. Write a function that will take this array as input and return the sorted array using Merge sort.
DAY12,SORTING,FALSE,Quick Sort,You are given an array of integers. Write a function that will take this array as input and return the sorted array using Quick sort.
DAY12,SORTING,FALSE,Radix Sort,You are given an array of non-negative integers. Write a function that will take this array as input and return the sorted array using Radix sort.
DAY13,SINGLY LINKED LIST,FALSE,Construct SLL,"Design a Singly linked list class that has a head and tail. Every node is to have two attributes: value:  the value of the current node, and next: a pointer to the next node. The linked list is to be 0-indexed. The class should support the following: 
SinglyLinkedList() Initializes the SinglyLinkedList object.
get(index) Get the value of the indexth node. If the index is invalid, return -1.
addAtHead(value)- Add a node of given value before the first element of the linked list. 
addAtTail(value) -  Add a node of given value at the last element of the linked list.
addAtIndex(index, value) Add a node of given value before the indexth node in the linked list. If index equals the length of the linked list, the node will be appended to the end of the linked list. If index is greater than the length, don’t insert the node.
deleteAtIndex(index) Delete the indexth node in the linked list, if the index is valid, else nothing happens."
DAY13,SINGLY LINKED LIST,FALSE,delete duplicates ,"You are given the head of a Sorted Singly Linked list. Write a function that will take the given head as input, delete all nodes that have a value that is already the value of another node so that each value appears 1 time only and return the linked list, which is still to be a sorted linked list."
DAY14,SINGLY LINKED LIST,FALSE,Reverse SLL,"You are given the head of a Singly Linked list. Write a function that will take the given head as input, reverse the Linked List and return the new head of the reversed Linked List."
DAY14,SINGLY LINKED LIST,FALSE,Cycle Detection,"You are given the head of a linked list. Check if there is a cycle and if yes,  return the node where the cycle begins. If there is no cycle, return null. There is a cycle in a linked list if there is some node in the list that can be reached again by continuously following the next pointer. Do not modify the linked list. "
DAY15,SINGLY LINKED LIST,FALSE,find duplicate number,"Given an array of integers nums containing n + 1 integers where each integer is in the range [1, n] inclusive. There is only one repeated number in nums, return this repeated number. You must solve the problem without modifying the array nums and uses only constant extra space. "
DAY15,SINGLY LINKED LIST,FALSE,Add 2 numbers,"You are given two non-empty linked lists representing two non-negative integers. The digits are stored in reverse order, and each of their nodes contains a single digit. Add the two numbers and return the sum as a linked list.
You may assume the two numbers do not contain any leading zero, except the number 0 itself. 0<=Node value<=9"
DAY16,DOUBLY LINKED LIST,FALSE,DLL remove insert ,"Create a Doubly Linked List class. Write Instance Methods for this class to be able to 
1.remove a node when the node to be removed is given as Input.
2. insert a node before a particular node(both the node to be inserted and the node before which the insertion is to happen will be given as input). If the node to be inserted is 
-part of the linked list then shift its place to the desired location
-a new node, then insert the new node at the place desired."
DAY16,DOUBLY LINKED LIST,FALSE,"DLL remove all, insert at position","Create a Doubly Linked List class. Write Instance Methods for this class to be able to 
1. remove all the nodes in the doubly linked list which have their value equal to a given value.
2.Insert a node at a desired position (node and position are given). The Linked List is 0 indexed. If given node is a node existing in the Linked List shift it to the desired position."
DAY17,STACKS,FALSE,Construct Stack,"Implement a Stack: 
Using an Array
with a Stack class using a Linked list
One should be able to add to the stack and remove from the stack following the LIFO property."
DAY17,STACKS,FALSE,Reverse Polish Notation,"Evaluate the value of an arithmetic expression in Reverse Polish Notation(See example). Valid operators are +, -, *, and /. Note that division between two integers should truncate toward zero. It is guaranteed that the given RPN expression is always valid. That means the expression would always evaluate to a result, and there will not be any division by zero operation. The Input is an array of strings where each element is either a valid operator or an integer. E.g.[“1”,”2”,”+”]"
DAY18,QUEUES,FALSE,Construct Queue,"Implement a Queue: 
Using an Array
with a Queue class using a Linked list
One should be able to add to the queue and remove from the queue following the FIFO property."
DAY18,QUEUES,FALSE,Implement Queue with Stack,"Implement a first in first out (FIFO) queue using only two stacks. The implemented queue should support all the functions of a normal queue (push, peek, pop, and empty).
Implement the MyQueue class:
push(val) Pushes element val to the back of the queue.
pop() Removes the element from the front of the queue and returns it.
peek() Returns the element at the front of the queue.
empty() Returns true if the queue is empty, false otherwise.

Notes:
You must use only standard operations of a stack, which means only push to top, peek/pop from top, size, and is empty operations are valid.
Depending on your language, the stack may not be supported natively. You may simulate a stack using a list or deque (double-ended queue) as long as you use only a stack's standard operations. 

Follow-up: Implement the queue such that each operation is amortized O(1) time complexity. In other words, performing n operations will take overall O(n) time even if one of those operations may take longer."
DAY19,BINARY TREE AND BST,FALSE,Construct BST,"Design a Binary Search Tree class that supports the following:
1.Insert a value
2.Remove a value. This method should remove the first occurrence of a value. 
3.Find a value. If the value is found it should return the node with the value else return false."
DAY19,BINARY TREE AND BST,FALSE,Traverse BST,"Write a 4 instance methods for a Binary Search Tree class to traverse the BST. 
1. Method 1 : traverse the tree breadth first and return an array that contains all the values of the BST.
2. Method 2: traverse the tree depth first – In-order and return an array that contains all the values of the BST.
3. Method 3 : traverse the tree depth first – Pre-order and return an array that contains all the values of the BST.
4. Method 4 : traverse the tree depth first – Post-order and return an array that contains all the values of the BST."
DAY20,BINARY TREE AND BST,FALSE,Level Order traversal,"Write a function that takes the root of a binary tree, and returns the level order traversal of its nodes' values. (i.e., from left to right, level by level). Initially write an instance method for the Binary Search tree class to insert the values given as an array into the Binary tree (from left to right, level by level). Each value in the array which is not null is to be made a node and added to the tree. (See examples below). Then write the function mentioned first."
DAY20,BINARY TREE AND BST,FALSE,Left/Right View of binary tree,"1. Given the root of a binary tree, imagine yourself standing on the right side of it, return the values of the nodes you can see ordered from top to bottom.
2. Given the root of a binary tree, imagine yourself standing on the left side of it, return the values of the nodes you can see ordered from top to bottom."
DAY21,BINARY TREE AND BST,FALSE,Invert Binary Tree,"Given the root of a binary tree, invert the tree, and return its root. 
(Invert means swap every left node for its corresponding right node / get mirror image)"
DAY21,BINARY TREE AND BST,FALSE,Diameter of binary tree,Write a function which takes in the root of a binary tree and returns the length of the diameter of the tree. The diameter of a binary tree is the length of the longest path between any two nodes in the tree. It is not necessary for this path to pass through the root of the tree. The length of a path between two nodes is the number of edges between them. 
DAY22,BINARY TREE AND BST,FALSE,Convert Sorted Array to Binary Search Tree,"You are given an array where the elements are strictly in increasing (ascending) order, convert it to a height-balanced binary search tree. A height-balanced binary tree is a binary tree in which the depth of the two subtrees of every node does not differ by more than 1."
DAY22,BINARY TREE AND BST,FALSE,Validate BST,"You are given the root of a binary tree, determine if it is a valid binary search tree (BST). A valid BST is defined as follows:
The left subtree of a node contains only nodes with keys less than the node's key.
The right subtree of a node contains only nodes with keys greater than the node's key.
Both the left and right subtrees must also be binary search trees."
DAY23,HEAPS AND PRIORITY QUEUE,FALSE,Max Heap Construction,"Write a max Heap Class that supports the following:
1.Building a Max heap from an input array
2.Inserting integers in the Heap
3.Removing the Heap’s maximum / root value
4.Peeking at the Heap’s maximum / root value
The Heap is to be represented in the form of an array."
DAY23,HEAPS AND PRIORITY QUEUE,FALSE,min Priority Queue Construction,"Implement a Priority Queue as a min Binary Heap. The Priority Queue class should support the following functions
1.Enqueue to insert an element
2.Dequeue to extract the element with the highest priority ( lowest numerical priority is treated as highest priority)"
DAy24,GRAPHS,FALSE,BFS - Adj List and Adj Matrix,"You are given an undirected graph stored 
as an adjacency list 
as an adjacency Matrix. 
Write functions to traverse this graph using the Breadth first Search approach. As you traverse the graph store the values of the vertices in an array and return this array."
DAY24,GRAPHS,FALSE,DFS - Iterative and Recursive,"You are given a graph stored as an adjacency list. Write functions to traverse the graph using the Depth first Search approach 
1) recursively and 
2) iteratively. 
As you traverse the graph store the values of the vertices in an array and return this array."
DAY25,GRAPHS,FALSE,Number of connected components,"You are given a graph with n vertices. To indicate the connections in the graph you are given an array edges whose each element is an array of the form [u,v]. [u,v] indicates that there is an edge between u and v where u and v denote two vertices or nodes. Write a function that takes in ‘n’ and the ‘edges’ array and returns the number of connected components in the graph."
DAY25,GRAPHS,FALSE,Course Scheduler / Topological sort,"You have to take a total of n courses leabled from 0 to n-1. Before you can take some courses you need to take it’s prerequisite courses. You are given an array prerequisites where each element [x,y] indicates that to take course x you have to take y first. E.g. [2,3] indicates that to take course 2 one has to first take course 3. Write a function that takes in n and the prerequisite array and returns true if you can complete all courses, else return false."